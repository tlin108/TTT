exports[`test renders without crashing 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="game">
    <div>
        <Board
            onClick={[Function]}
            squares={
                Array [
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                  ]
            } />
    </div>
    <div
        className="game-info">
        <div>
            Next player: X
        </div>
        <ol>
            <li>
                <a
                    href="#"
                    onClick={[Function]}>
                    Game start
                </a>
            </li>
        </ol>
    </div>
</div>,
  "nodes": Array [
    <div
      className="game">
      <div>
            <Board
                  onClick={[Function]}
                  squares={
                        Array [
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                              null,
                            ]
                  } />
      </div>
      <div
            className="game-info">
            <div>
                  Next player: X
            </div>
            <ol>
                  <li>
                        <a
                              href="#"
                              onClick={[Function]}>
                              Game start
                        </a>
                  </li>
            </ol>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Game />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Game {
        "_reactInternalInstance": [Circular],
        "calculateWinner": [Function],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "history": Array [
            Object {
              "squares": Array [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
              ],
            },
          ],
          "stepNumber": 0,
          "xIsNext": true,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="game">
          <div>
                    <Board
                              onClick={[Function]}
                              squares={
                                        Array [
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                ]
                              } />
          </div>
          <div
                    className="game-info">
                    <div>
                              Next player: X
                    </div>
                    <ol>
                              <li>
                                        <a
                                                  href="#"
                                                  onClick={[Function]}>
                                                  Game start
                                        </a>
                              </li>
                    </ol>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="game">
          <div>
                    <Board
                              onClick={[Function]}
                              squares={
                                        Array [
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                  null,
                                                ]
                              } />
          </div>
          <div
                    className="game-info">
                    <div>
                              Next player: X
                    </div>
                    <ol>
                              <li>
                                        <a
                                                  href="#"
                                                  onClick={[Function]}>
                                                  Game start
                                        </a>
                              </li>
                    </ol>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Game />,
}
`;
